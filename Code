# Package import & Device setting

import torch
import torch.nn as nn
import torchvision
from torch.nn import init
from torch.nn import functional as F
import math
import matplotlib.pyplot as plt
import matplotlib.animation as animation
from scipy.ndimage.interpolation import rotate
import numpy as np
from torch.utils.data import Dataset, DataLoader
from torchvision import transforms
from IPython.display import HTML
from IPython.display import clear_output
import torch.nn as nn
import torch.nn.functional as F
import torch
from functools import partial
import time
import datetime
import cv2 as cv
import glob
import os

os.environ['CUDA_VISIBLE_DEVICES'] = '0'

# Dataset


t = torch.arange(1500, 1500+2048)/(1500+2048)
x1 = t*3.-2
x2 = torch.sin(t*2*np.pi*4)*t
x3 = torch.cos(t*2*np.pi*4)*t
x_ = torch.stack([x1, x2, x3], -1)
x = x_ + torch.randn(len(t), 3)*0.02



def plot_3d(x):
    fig = plt.figure(figsize=(20, 6))
    ax0 = fig.add_subplot(131, projection="3d")
    ax1 = fig.add_subplot(132, projection="3d")
    ax2 = fig.add_subplot(133, projection="3d")


    ax0.scatter(x[:, 0], x[:, 1], x[:, 2], s = 2)
    ax0.set_xlabel('x Label')
    ax0.set_ylabel('y Label')
    ax0.set_zlabel('z Label')
    ax0.view_init(elev=15., azim=45)

    ax1.scatter(x[:, 0], x[:, 1], x[:, 2], s = 2)
    ax1.set_xlabel('x Label')
    ax1.set_ylabel('y Label')
    ax1.set_zlabel('z Label')
    ax1.view_init(elev=30., azim=120)

    ax2.scatter(x[:, 0], x[:, 1], x[:, 2], s = 2)
    ax2.set_xlabel('x Label')
    ax2.set_ylabel('y Label')
    ax2.set_zlabel('z Label')
    ax2.view_init(elev=45., azim=170)

    plt.show()

plot_3d(x_)
plot_3d(x)

